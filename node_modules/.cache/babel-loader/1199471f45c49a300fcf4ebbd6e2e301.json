{"ast":null,"code":"var _jsxFileName = \"/home/differentsyntax/Projects/HireADragon/src/components/studentform.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { TextField, Button } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport cities from '../data/city';\nimport MuiPhoneInput from 'material-ui-phone-number';\n\nconst Studentform = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: ''\n  },\n  validationSchema: validationSchema,\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, ({\n  isSubmitting\n}) => /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"student-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  label: \"First Name\",\n  required: true,\n  variant: \"filled\",\n  type: \"name\",\n  name: \"firstName\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"firstName\",\n  color: \"red\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"student-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  label: \"Last Name\",\n  required: true,\n  variant: \"filled\",\n  type: \"name\",\n  name: \"lastName\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"lastName\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"student-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  type: \"email\",\n  required: true,\n  label: \"Email\",\n  variant: \"filled\",\n  helperText: \"@drexel.edu only\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 6\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"student-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(MuiPhoneInput, {\n  onlyCountries: ['us'],\n  margin: \"normal\",\n  variant: \"filled\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 6\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(Autocomplete, {\n  freeSolo: true,\n  options: cities.map(option => option.city),\n  renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n    className: \"student-field\"\n  }, params, {\n    label: \"City\",\n    required: true,\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(Autocomplete, {\n  freeSolo: true,\n  options: cities.map(option => option.state),\n  renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n    className: \"student-field\"\n  }, params, {\n    label: \"State\",\n    required: true,\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 6\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  variant: \"contained\",\n  color: \"Primary\",\n  type: \"submit\",\n  disabled: isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}, \"Submit\")))));\n\nconst validationSchema = yup.object({\n  firstName: yup.string()\n}, {\n  lastName: yup.string()\n});\nexport default Studentform;","map":{"version":3,"sources":["/home/differentsyntax/Projects/HireADragon/src/components/studentform.js"],"names":["React","Formik","Field","Form","ErrorMessage","yup","TextField","Button","Autocomplete","cities","MuiPhoneInput","Studentform","firstName","lastName","validationSchema","values","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","map","option","city","params","state","object","string"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\nimport { TextField, Button } from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport cities from '../data/city'\nimport MuiPhoneInput from 'material-ui-phone-number'\n\nconst Studentform = () => (\n\t<>\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\t\tfirstName: '',\n\t\t\t\t\tlastName: '',\n\t\t\t}}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n\t\t\t\t\t<div className = \"student-field\">\n\t\t\t\t\t\t<TextField label = \"First Name\" required variant = \"filled\" type=\"name\" name=\"firstName\" />\n\t\t\t\t\t\t<ErrorMessage name=\"firstName\" color = \"red\" component=\"div\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"student-field\">\n\t\t\t\t\t\t<TextField label = \"Last Name\" required variant = \"filled\" type=\"name\" name=\"lastName\" />\n\t\t\t\t\t\t<ErrorMessage name=\"lastName\" component=\"div\" />\n          </div>\n\t\t\t\t\t<div className = \"student-field\">\n\t\t\t\t\t<TextField type = \"email\" required label=\"Email\" variant = \"filled\" helperText=\"@drexel.edu only\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"student-field\">\n\t\t\t\t\t<MuiPhoneInput onlyCountries={['us']} margin = \"normal\" variant = \"filled\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t<Autocomplete freeSolo options={cities.map((option) => option.city)} renderInput={(params) => (\n\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\tclassName = \"student-field\" {...params} label=\"City\" required variant = \"filled\" />\n\t\t\t\t\t\t\t)}\n      \t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t<Autocomplete freeSolo options={cities.map((option) => option.state)} renderInput={(params) => (\n\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\tclassName = \"student-field\"\t{...params} label=\"State\" required variant = \"filled\" />\n\t\t\t\t\t\t\t)}\n      \t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button variant=\"contained\" color = \"Primary\" type=\"submit\" disabled={isSubmitting}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n        </Form>\n      )}\n    </Formik>\n\t</>\n)\n\nconst validationSchema = yup.object(\n\t{\n\t\tfirstName: yup\n\t\t.string()\n\t},\n\t{\n\t\tlastName: yup\n\t\t.string()\n\t}\n)\nexport default Studentform"]},"metadata":{},"sourceType":"module"}