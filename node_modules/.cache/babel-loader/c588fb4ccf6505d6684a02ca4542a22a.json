{"ast":null,"code":"import React from'react';import{Formik,Field,Form,ErrorMessage}from'formik';import*as yup from'yup';import{TextField,Button}from'@material-ui/core';import Autocomplete from'@material-ui/lab/Autocomplete';import countries from'../data/country';import swal from'sweetalert';var formURL=\"https://tjrcwgmaw2.execute-api.us-east-1.amazonaws.com/Prod/submitForm\";var Employerform=function Employerform(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Formik,{initialValues:{firstName:'',lastName:'',email:'',position:'',company:'',city:'',country:'',gentext:''},validationSchema:validationSchema,onSubmit:function onSubmit(data,_ref){var setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;setSubmitting(true);// make async call\n//alert(JSON.stringify(data, null, 2));\nvar xhr=new XMLHttpRequest();xhr.open('post',formURL,true);xhr.setRequestHeader('Accept','application/json; charset=utf-8');xhr.setRequestHeader('Content-Type','application/json; charset=UTF-8');xhr.send(JSON.stringify(data));xhr.onloadend=function(response){if(response.target.status===200){resetForm();swal(\"Your info is in! We'll reach out to you soon!\");}else{swal(\"There was some error! Please try again!\");console.error(JSON.parse(response));}};setSubmitting(false);}},function(_ref2){var isSubmitting=_ref2.isSubmitting,errors=_ref2.errors,touched=_ref2.touched;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Field,{fullWidth:true,label:\"First Name\",margin:\"normal\",required:true,variant:\"outlined\",type:\"name\",name:\"firstName\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"firstName\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Field,{fullWidth:true,label:\"Last Name\",margin:\"normal\",required:true,variant:\"outlined\",type:\"name\",name:\"lastName\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"lastName\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Field,{fullWidth:true,type:\"email\",margin:\"normal\",required:true,label:\"Email\",variant:\"outlined\",name:\"email\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"email\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Field,{fullWidth:true,type:\"text\",margin:\"normal\",required:true,label:\"Position\",variant:\"outlined\",name:\"position\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"position\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Field,{fullWidth:true,type:\"text\",margin:\"normal\",required:true,label:\"Company\",variant:\"outlined\",name:\"company\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"company\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Field,{fullWidth:true,type:\"text\",margin:\"normal\",required:true,label:\"City\",variant:\"outlined\",name:\"city\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"city\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(Autocomplete,{options:countries,getOptionLabel:function getOptionLabel(option){return option.name;},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(Field,Object.assign({},params,{margin:\"normal\",required:true,label:\"Country\",name:\"country\",variant:\"outlined\",as:TextField}));}}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"country\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"employer-field\"},/*#__PURE__*/React.createElement(\"p\",null,\" Do you wish to tell us something? (Optional): \"),/*#__PURE__*/React.createElement(Field,{fullWidth:true,placeholder:\"My company is looking for ...\",multiline:true,rows:4,rowsMax:10,name:\"gentext\",variant:\"outlined\",as:TextField}),/*#__PURE__*/React.createElement(\"div\",{className:\"errors\"},/*#__PURE__*/React.createElement(ErrorMessage,{name:\"gentext\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{id:\"employerform-submit\",fullWidth:true,variant:\"outlined\",color:\"primary\",type:\"submit\",disabled:isSubmitting},\"Submit\"))));}));};var validationSchema=yup.object().shape({firstName:yup.string('*should be a string').required('*required field'),lastName:yup.string('*should be a string').required('*required field'),email:yup.string().email('*not a valid email').required('*required field'),position:yup.string().required('*required field'),company:yup.string().required('*required field'),city:yup.string('*should be a string').required('*required field'),country:yup.string('*should be a valid country').required('*required field')});export default Employerform;","map":{"version":3,"sources":["/home/differentsyntax/Projects/HireADragon/src/components/employerform.js"],"names":["React","Formik","Field","Form","ErrorMessage","yup","TextField","Button","Autocomplete","countries","swal","formURL","Employerform","firstName","lastName","email","position","company","city","country","gentext","validationSchema","data","setSubmitting","resetForm","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onloadend","response","target","status","console","error","parse","isSubmitting","errors","touched","option","name","params","object","shape","string","required"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\nimport { TextField, Button } from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport countries from '../data/country'\nimport swal from 'sweetalert';\n\nconst formURL = \"https://tjrcwgmaw2.execute-api.us-east-1.amazonaws.com/Prod/submitForm\"\nconst Employerform = () => (\n\t<div>\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tfirstName: '',\n\t\t\t\tlastName: '',\n\t\t\t\temail: '',\n\t\t\t\tposition: '',\n\t\t\t\tcompany: '',\n\t\t\t\tcity: '',\n\t\t\t\tcountry: '',\n\t\t\t\tgentext: ''\n\t\t}}\n\t\tvalidationSchema={validationSchema}\n\t\tonSubmit={(data, {setSubmitting, resetForm }) => {\n\t\t\t\t\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// make async call\n\t\t\t  //alert(JSON.stringify(data, null, 2));\n\t\t\t\tvar xhr = new XMLHttpRequest()\n\t\t\t\txhr.open('post', formURL, true)\n\t\t\t\txhr.setRequestHeader('Accept', 'application/json; charset=utf-8')\n\t\t\t\txhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8')\n\t\t\t\txhr.send(JSON.stringify(data))\n\n\t\t\t\txhr.onloadend = response => {\n\t\t\t\t\tif (response.target.status === 200) {\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\tswal(\"Your info is in! We'll reach out to you soon!\")\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswal(\"There was some error! Please try again!\")\n\t\t\t\t\t\tconsole.error(JSON.parse(response));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetSubmitting(false)\n\t\t\t}}\n\t>\n\t\t{({isSubmitting, errors, touched}) => (\n        <Form>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t\t<Field fullWidth label = \"First Name\" margin = \"normal\" required variant = \"outlined\" type=\"name\" name=\"firstName\" as={TextField} />\n\t\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"firstName\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t\t<Field fullWidth label = \"Last Name\" margin = \"normal\" required variant = \"outlined\" type=\"name\" name=\"lastName\" as={TextField}/>\n\t\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"lastName\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"email\" margin = \"normal\" required label=\"Email\" variant = \"outlined\" name=\"email\" as={TextField}/>\n\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"email\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"text\" margin = \"normal\" required label=\"Position\" variant = \"outlined\" name = \"position\" as={TextField}/>\n\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"position\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"text\" margin = \"normal\" required label=\"Company\" variant = \"outlined\" name = \"company\" as={TextField}/>\n\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"company\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"text\" margin = \"normal\" required label=\"City\" variant = \"outlined\" name = \"city\" as={TextField}/>\n\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"city\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\toptions={countries}\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\t\t\t\t\trenderInput={(params) => <Field {...params} margin = \"normal\" required label=\"Country\" name = \"country\" variant=\"outlined\" as={TextField}/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"country\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t\t<p> Do you wish to tell us something? (Optional): </p>\n\t\t\t\t\t\t<Field fullWidth placeholder=\"My company is looking for ...\" multiline rows={4} rowsMax={10} name = \"gentext\" variant = \"outlined\" as={TextField}/>\n\t\t\t\t\t\t<div className = \"errors\">\n\t\t\t\t\t\t\t<ErrorMessage name=\"gentext\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button id = \"employerform-submit\" fullWidth variant=\"outlined\" color = \"primary\" type=\"submit\" disabled={isSubmitting}>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n      )}\n    </Formik>\n\t</div>\n)\n\nconst validationSchema = yup.object().shape(\n\t{\n\t\tfirstName: yup\n\t\t.string('*should be a string')\n\t\t.required('*required field')\n\t,\n\t\n\t\tlastName: yup\n\t\t.string('*should be a string')\n\t\t.required('*required field')\n\t,\n\t\n\t\temail: yup\n\t\t.string()\n\t\t.email('*not a valid email')\n\t\t.required('*required field')\n\t,\n\t\n\t\tposition: yup\n\t\t.string()\n\t\t.required('*required field')\n\t,\n\t\n\t\tcompany: yup\n\t\t.string()\n\t\t.required('*required field')\n\t,\n\t\tcity: yup\n\t\t.string('*should be a string')\n\t\t.required('*required field')\n\t,\n\t\n\t\tcountry: yup\n\t\t.string('*should be a valid country')\n\t\t.required('*required field')\n\t}\n)\n\nexport default Employerform"]},"metadata":{},"sourceType":"module"}