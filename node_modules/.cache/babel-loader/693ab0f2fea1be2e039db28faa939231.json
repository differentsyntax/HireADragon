{"ast":null,"code":"var _jsxFileName = \"/home/differentsyntax/Projects/HireADragon/src/components/studentform.js\";\nimport React from 'react';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport * as yup from 'yup';\n\nconst Studentform = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    pets: [{\n      id: \"1\",\n      type: \"cat\",\n      name: \"Jarvis\"\n    }]\n  },\n  validationSchema: validationSchema,\n  onSubmit: (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setSubmitting(true);\n    console.log(data);\n    setSubmitting(false);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, ({\n  values,\n  errors,\n  isSubmitting\n}) => /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  placeholder: \"Sharon\",\n  name: \"firstName\",\n  type: \"input\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  placeholder: \"Smith\",\n  name: \"lastName\",\n  type: \"input\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 8\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FieldArray, {\n  name: \"pets\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }\n}, ({\n  arrayHelpers\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }\n}, values.pets.map((pet, index) => {\n  const name = `pets.${index}.name`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: pet.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    value: \"cat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }, \"cat\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }, \"dog\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"frog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }\n  }, \"frog\")));\n})))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  disabled: isSubmitting,\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}, \"Submit!\")), /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}, JSON.stringify(values, null, 2)), /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }\n}, JSON.stringify(errors, null, 2)))));\n\nconst validationSchema = yup.object({\n  firstName: yup.string().required().max(10)\n});\nexport default Studentform;","map":{"version":3,"sources":["/home/differentsyntax/Projects/HireADragon/src/components/studentform.js"],"names":["React","Formik","Field","Form","FieldArray","yup","Studentform","firstName","lastName","pets","id","type","name","validationSchema","data","setSubmitting","resetForm","console","log","values","errors","isSubmitting","arrayHelpers","map","pet","index","JSON","stringify","object","string","required","max"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Formik, Field, Form, FieldArray} from 'formik'\nimport * as yup from 'yup'\n\nconst Studentform = () => (\n\t<>\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\t\tfirstName: '',\n\t\t\t\t\tlastName: '',\n\t\t\t\t\tpets: [{\n\t\t\t\t\t\tid: \"1\",\n\t\t\t\t\t\ttype: \"cat\",\n\t\t\t\t\t\tname: \"Jarvis\"}]\n\t\t\t}}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={(data, {setSubmitting, resetForm }) => {\n\t\t\t\tsetSubmitting(true)\n\t\t\t\tconsole.log(data)\n\t\t\t\tsetSubmitting(false)\n\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ values, errors, isSubmitting}) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Field placeholder = \"Sharon\" name='firstName' type = 'input' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Field placeholder = \"Smith\" name='lastName' type = 'input' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FieldArray name = \"pets\">\n\t\t\t\t\t\t\t\t{({arrayHelpers}) => (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{values.pets.map( (pet, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tconst name = `pets.${index}.name`\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div key={pet.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<select name = {name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option selected value= \"cat\">cat</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value= \"dog\">dog</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value= \"frog\">frog</option>\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</FieldArray>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<button disabled={isSubmitting} type=\"submit\">\n\t\t\t\t\t\t\tSubmit!\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<pre>{JSON.stringify(values, null, 2)}</pre>\n\t\t\t\t\t\t<pre>{JSON.stringify(errors, null, 2)}</pre>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\n\t\t\t</Formik>\n\t</>\n)\n\nconst validationSchema = yup.object({\n\tfirstName: yup\n\t.string()\n\t.required()\n\t.max(10)\n})\nexport default Studentform"]},"metadata":{},"sourceType":"module"}