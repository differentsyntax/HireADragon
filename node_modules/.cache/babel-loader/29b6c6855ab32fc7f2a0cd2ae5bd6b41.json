{"ast":null,"code":"var _jsxFileName = \"/home/differentsyntax/Projects/HireADragon/src/pages/Students.js\";\nimport React from 'react';\nimport Typist from 'react-typist';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst Students = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"textDragon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Typist, {\n  avgTypingSpeed: 15000,\n  startDelay: 500,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, \"#HireADragon\"))), /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, \"Any place in your app!\"), /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    Name: 'Lorem Ipsum',\n    Email: 'someone@example.com'\n  },\n  validate: values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, ({\n  isSubmitting\n}) => /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: \"firstName\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n  name: \"firstName\",\n  type: \"text\",\n  className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"firstName\",\n  component: \"div\",\n  className: \"invalid-feedback\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: \"lastName\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n  name: \"lastName\",\n  type: \"text\",\n  className: 'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : ''),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"lastName\",\n  component: \"div\",\n  className: \"invalid-feedback\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: \"email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n  name: \"email\",\n  type: \"text\",\n  className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"email\",\n  component: \"div\",\n  className: \"invalid-feedback\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"submit\",\n  className: \"btn btn-primary mr-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"reset\",\n  className: \"btn btn-secondary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }\n}, \"Reset\")))));\n\nexport default Students;","map":{"version":3,"sources":["/home/differentsyntax/Projects/HireADragon/src/pages/Students.js"],"names":["React","Typist","Formik","Form","Field","ErrorMessage","Students","Name","Email","values","errors","email","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","firstName","touched","lastName"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Typist from 'react-typist'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst Students = () => (\n\t<>\n\t<div className = \"textDragon\">\n\t<Typist avgTypingSpeed={15000} startDelay={500}>\n\t\t<a href=\"/\" >#HireADragon</a>\n\t</Typist>\n\t</div>\n\t\t<h1>Any place in your app!</h1>\n\n    <Formik\n      initialValues={{ Name: 'Lorem Ipsum', Email: 'someone@example.com' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n\t\t\t<Form>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\n\t\t\t\t\t\t<Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n\t\t\t\t\t\t<ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\n\t\t\t\t\t\t<Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n\t\t\t\t\t\t<ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\n\t\t\t\t\t\t<Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n\t\t\t\t\t\t<button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n\t\t\t\t</div>\n\t\t\t</Form>\n      )}\n    </Formik>\n\t</>\n)\n\nexport default Students"]},"metadata":{},"sourceType":"module"}