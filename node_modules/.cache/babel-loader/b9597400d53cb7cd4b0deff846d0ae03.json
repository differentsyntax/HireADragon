{"ast":null,"code":"var _jsxFileName = \"/home/differentsyntax/Projects/HireADragon/src/components/employerform.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { TextField, Button } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport countries from '../data/country';\n\nconst Employerform = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    city: '',\n    country: '',\n    gentext: ''\n  },\n  validationSchema: validationSchema,\n  onSubmit: (data, {\n    setSubmitting,\n    resetForm\n  }) => {\n    resetForm();\n    setSubmitting(true); // make async call\n    // alert(JSON.stringify(data, null, 2));\n\n    setSubmitting(false);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, ({\n  isSubmitting,\n  errors,\n  touched\n}) => /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  label: \"First Name\",\n  margin: \"normal\",\n  required: true,\n  variant: \"outlined\",\n  type: \"name\",\n  name: \"firstName\",\n  as: TextField,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"firstName\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 8\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  label: \"Last Name\",\n  margin: \"normal\",\n  required: true,\n  variant: \"outlined\",\n  type: \"name\",\n  name: \"lastName\",\n  as: TextField,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 8\n  }\n}), /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: \"lastName\",\n  component: \"div\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 8\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  type: \"email\",\n  margin: \"normal\",\n  required: true,\n  label: \"Email\",\n  variant: \"outlined\",\n  name: \"email\",\n  as: TextField,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  type: \"text\",\n  margin: \"normal\",\n  required: true,\n  label: \"Position\",\n  variant: \"outlined\",\n  name: \"position\",\n  as: TextField,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  type: \"text\",\n  margin: \"normal\",\n  required: true,\n  label: \"Company\",\n  variant: \"outlined\",\n  name: \"company\",\n  as: TextField,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  type: \"text\",\n  margin: \"normal\",\n  required: true,\n  label: \"City\",\n  variant: \"outlined\",\n  name: \"city\",\n  as: TextField,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Autocomplete, {\n  options: countries,\n  getOptionLabel: option => option.name,\n  renderInput: params => /*#__PURE__*/React.createElement(Field, Object.assign({}, params, {\n    margin: \"normal\",\n    required: true,\n    label: \"Country\",\n    name: \"country\",\n    variant: \"outlined\",\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"employer-field\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 8\n  }\n}, \" Do you wish to tell us something? (Optional): \"), /*#__PURE__*/React.createElement(Field, {\n  fullWidth: true,\n  placeholder: \"My company is looking for ...\",\n  multiline: true,\n  rows: 4,\n  rowsMax: 10,\n  name: \"gentext\",\n  variant: \"outlined\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 8\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  id: \"employerform-submit\",\n  fullWidth: true,\n  variant: \"outlined\",\n  color: \"primary\",\n  type: \"submit\",\n  disabled: isSubmitting,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 8\n  }\n}, \"Submit\"))))));\n\nconst validationSchema = yup.object({\n  firstName: yup.string().required()\n}, {\n  lastName: yup.string().required()\n});\nexport default Employerform;","map":{"version":3,"sources":["/home/differentsyntax/Projects/HireADragon/src/components/employerform.js"],"names":["React","Formik","Field","Form","ErrorMessage","yup","TextField","Button","Autocomplete","countries","Employerform","firstName","lastName","email","city","country","gentext","validationSchema","data","setSubmitting","resetForm","isSubmitting","errors","touched","option","name","params","object","string","required"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\nimport { TextField, Button } from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport countries from '../data/country'\n\nconst Employerform = () => (\n\t<div>\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tfirstName: '',\n\t\t\t\tlastName: '',\n\t\t\t\temail: '',\n\t\t\t\tcity: '',\n\t\t\t\tcountry: '',\n\t\t\t\tgentext: ''\n\t\t}}\n\t\tvalidationSchema={validationSchema}\n\t\tonSubmit={(data, {setSubmitting, resetForm }) => {\n\t\t\t\tresetForm();\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// make async call\n\t\t\t\t// alert(JSON.stringify(data, null, 2));\n\t\t\t\t\n\t\t\t\tsetSubmitting(false)\n\t\t\t}}\n\t>\n\t\t{({isSubmitting, errors, touched}) => (\n        <Form>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t\t<Field fullWidth label = \"First Name\" margin = \"normal\" required variant = \"outlined\" type=\"name\" name=\"firstName\" as={TextField} />\n\t\t\t\t\t\t\t<ErrorMessage name=\"firstName\" component=\"div\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t\t<Field fullWidth label = \"Last Name\" margin = \"normal\" required variant = \"outlined\" type=\"name\" name=\"lastName\" as={TextField}/>\n\t\t\t\t\t\t\t<ErrorMessage name=\"lastName\" component=\"div\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"email\" margin = \"normal\" required label=\"Email\" variant = \"outlined\" name=\"email\" as={TextField}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"text\" margin = \"normal\" required label=\"Position\" variant = \"outlined\" name = \"position\" as={TextField}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"text\" margin = \"normal\" required label=\"Company\" variant = \"outlined\" name = \"company\" as={TextField}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Field fullWidth type = \"text\" margin = \"normal\" required label=\"City\" variant = \"outlined\" name = \"city\" as={TextField}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\toptions={countries}\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\t\t\t\t\trenderInput={(params) => <Field {...params} margin = \"normal\" required label=\"Country\" name = \"country\" variant=\"outlined\" as={TextField}/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className = \"employer-field\">\n\t\t\t\t\t\t\t<p> Do you wish to tell us something? (Optional): </p>\n\t\t\t\t\t\t\t<Field fullWidth placeholder=\"My company is looking for ...\" multiline rows={4} rowsMax={10} name = \"gentext\" variant = \"outlined\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button id = \"employerform-submit\" fullWidth variant=\"outlined\" color = \"primary\" type=\"submit\" disabled={isSubmitting}>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n      )}\n    </Formik>\n\t</div>\n)\n\nconst validationSchema = yup.object(\n\t{\n\t\tfirstName: yup\n\t\t.string()\n\t\t.required()\n\t},\n\t{\n\t\tlastName: yup\n\t\t.string()\n\t\t.required()\n\t}\n)\nexport default Employerform"]},"metadata":{},"sourceType":"module"}