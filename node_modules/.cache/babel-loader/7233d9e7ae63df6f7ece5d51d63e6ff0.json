{"ast":null,"code":"var _jsxFileName = \"/home/differentsyntax/Projects/HireADragon/src/pages/Students.js\";\nimport React from 'react';\nimport Typist from 'react-typist';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst Students = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"textDragon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Typist, {\n  avgTypingSpeed: 15000,\n  startDelay: 500,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, \"#HireADragon\"))), /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, \"Any place in your app!\"), /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  },\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required('First Name is required'),\n    lastName: Yup.string().required('Last Name is required'),\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n  }),\n  onSubmit: fields => {\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n  },\n  render: ({\n    errors,\n    status,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"firstName\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    className: 'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"lastName\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Reset\"))),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}));\n\nexport default Students;","map":{"version":3,"sources":["/home/differentsyntax/Projects/HireADragon/src/pages/Students.js"],"names":["React","Typist","Formik","Field","Form","ErrorMessage","Yup","Students","firstName","lastName","email","password","confirmPassword","object","shape","string","required","min","oneOf","ref","fields","alert","JSON","stringify","errors","status","touched"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Typist from 'react-typist'\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst Students = () => (\n\t<>\n\t<div className = \"textDragon\">\n\t<Typist avgTypingSpeed={15000} startDelay={500}>\n\t\t<a href=\"/\" >#HireADragon</a>\n\t</Typist>\n\t</div>\n\t\t<h1>Any place in your app!</h1>\n\n    <Formik\n\t\t\tinitialValues={{\n\t\t\t\t\tfirstName: '',\n\t\t\t\t\tlastName: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: ''\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\tfirstName: Yup.string()\n\t\t\t\t\t\t\t.required('First Name is required'),\n\t\t\t\t\tlastName: Yup.string()\n\t\t\t\t\t\t\t.required('Last Name is required'),\n\t\t\t\t\temail: Yup.string()\n\t\t\t\t\t\t\t.email('Email is invalid')\n\t\t\t\t\t\t\t.required('Email is required'),\n\t\t\t\t\tpassword: Yup.string()\n\t\t\t\t\t\t\t.min(6, 'Password must be at least 6 characters')\n\t\t\t\t\t\t\t.required('Password is required'),\n\t\t\t\t\tconfirmPassword: Yup.string()\n\t\t\t\t\t\t\t.oneOf([Yup.ref('password'), null], 'Passwords must match')\n\t\t\t\t\t\t\t.required('Confirm Password is required')\n\t\t\t})}\n\t\t\tonSubmit={fields => {\n\t\t\t\t\talert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n\t\t\t}}\n\t\t\trender={({ errors, status, touched }) => (\n\t\t\t<Form>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\n\t\t\t\t\t\t<Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n\t\t\t\t\t\t<ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\n\t\t\t\t\t\t<Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n\t\t\t\t\t\t<ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\n\t\t\t\t\t\t<Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n\t\t\t\t\t\t<button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n\t\t\t\t</div>\n\t\t\t</Form>\n                )}\n    />\n\t</>\n)\n\nexport default Students"]},"metadata":{},"sourceType":"module"}